{"version":3,"sources":["components/ShowData.js","components/MultiSelect.js","components/ShowSingle.js","components/SingleSelect.js","components/CreateSurvey.js","components/TakeSurvey.js","App.js","index.js"],"names":["ShowSingle","ques","choice2","multi","map","item","index","type","className","MultiSelect","useState","options","setOptions","question","setQuestion","show","setShow","isQuestionAddDisabled","trim","undefined","find","opt","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","e","target","value","option","optionIdx","setOptionInArray","Button","onClick","idx","length","newOptions","newOptionIdx","currentNewOptionIndex","addOption","disabled","splice","ShowData","single","SingleSelect","console","log","CreateSurvey","dropdownOpen","setDropdownOpen","dropdownText","setDropdownText","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","TakeSurvey","App","path","to","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fa10fe40.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ShowSingle = ({ ques, multi }) => {\n  const choice2 = multi.map((item, index) => {\n    return (\n      <div>\n        <div>\n          <input type=\"radio\" />\n          {\"  \"}\n          {item}{\" \"}\n        </div>\n      </div>\n    );\n  });\n  return (\n    <div className=\"main text-center\">\n      <div className=\"div\">{choice2}</div>\n    </div>\n  );\n};\n\nexport default ShowSingle;\n","import React, { useState } from \"react\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\nimport { Button } from \"reactstrap\";\nimport ShowData from \"./ShowData\";\nfunction MultiSelect() {\n  const [options, setOptions] = useState([\"\"]);\n  const [question, setQuestion] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const addOption = (idx) => {\n    if (options.length < 4) {\n      // options.splice(idx+1,0,`option ${options.length+1}`);\n      // setOptions([...options]);\n      const newOptions = [...options, \"\"];\n      const newOptionIdx = idx + 1;\n      let currentNewOptionIndex = newOptions.length - 1;\n      while (newOptionIdx !== currentNewOptionIndex) {\n        newOptions[currentNewOptionIndex] =\n          newOptions[currentNewOptionIndex - 1];\n        currentNewOptionIndex--;\n        newOptions[currentNewOptionIndex] = \"\";\n      }\n      setOptions(newOptions);\n    }\n  };\n\n  const removeOption = (idx) => {\n    if (options.length > 1) {\n      options.splice(idx, 1);\n      setOptions([...options]);\n    }\n  };\n\n  const setOptionInArray = (value, optionIdx) => {\n    options[optionIdx] = value;\n    setOptions([...options]);\n  };\n\n  const isQuestionAddDisabled = () => {\n    return (\n      question.trim === \"\" ||\n      options.find((opt) => opt.trim() === \"\") !== undefined\n    );\n  };\n  return (\n    <div className=\"question-container\">\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>?</InputGroupText>\n        </InputGroupAddon>\n        <Input\n          placeholder=\"Your Question\"\n          onChange={(e) => setQuestion(e.target.value)}\n          value={question}\n        />\n      </InputGroup>\n      <p className=\"options-text\">Options</p>\n      {options.map((option, optionIdx) => (\n        <InputGroup className=\"input-grp\">\n          <Input\n            placeholder={`option ${optionIdx + 1}`}\n            value={option}\n            key={optionIdx}\n            onChange={(e) => setOptionInArray(e.target.value, optionIdx)}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              onClick={() => addOption(optionIdx)}\n              disabled={options.length === 4}\n            >\n              +\n            </Button>\n            <Button\n              onClick={() => removeOption(optionIdx)}\n              disabled={options.length === 1}\n            >\n              -\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      ))}\n      {options.length === 4 ? (\n        <div className=\"question button\">\n          <Button\n            onClick={() => {\n              setShow(true);\n            }}\n            className=\"survey-main-btn\"\n            disabled={isQuestionAddDisabled()}\n          >\n            Add Question\n          </Button>\n          <Button\n            onClick={() => {\n              setShow(true);\n            }}\n            className=\"survey-main-btn\"\n            disabled={isQuestionAddDisabled()}\n          >\n            Publish\n          </Button>\n          {show ? (\n            <>\n              <p>{question}</p>\n              <ShowData ques={question} multi={options} />\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default MultiSelect;\n","import React from \"react\";\n\nconst ShowSingle = ({ ques, single }) => {\n  const choice2 = single.map((item, index) => {\n    return (\n      <div>\n        <div>\n          <input type=\"radio\" />\n          {\"  \"}\n          {item}{\" \"}\n        </div>\n      </div>\n    );\n  });\n  return (\n    <div className=\"main text-center\">\n      <div className=\"div\">{choice2}</div>\n    </div>\n  );\n};\n\nexport default ShowSingle;\n","import React, { useState } from \"react\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\nimport { Button } from \"reactstrap\";\n\nimport ShowSingle from \"./ShowSingle\";\nfunction SingleSelect() {\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [question, setQuestion] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const isQuestionAddDisabled = () =>\n    question.trim === \"\" ||\n    options.find((opt) => opt.trim() === \"\") !== undefined;\n\n  const setOptionInArray = (value, optionIdx) => {\n    options[optionIdx] = value;\n    setOptions([...options]);\n  };\n\n  console.log(question);\n  console.log(options);\n  return (\n    <div className=\"question-container\">\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>?</InputGroupText>\n        </InputGroupAddon>\n        <Input\n          placeholder=\"Your Question\"\n          onChange={(e) => setQuestion(e.target.value)}\n          value={question}\n        />\n      </InputGroup>\n      <p className=\"options-text\">Options</p>\n      <InputGroup className=\"input-grp\">\n        <Input\n          placeholder=\"option1\"\n          value={options[0]}\n          onChange={(e) => setOptionInArray(e.target.value, 0)}\n        />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>+</InputGroupText>\n          <InputGroupText>-</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n      <InputGroup className=\"input-grp\">\n        <Input\n          placeholder=\"option2\"\n          value={options[1]}\n          onChange={(e) => setOptionInArray(e.target.value, 1)}\n        />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>+</InputGroupText>\n          <InputGroupText>-</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n      <div className=\"question button\">\n        <Button className=\"survey-main-btn\" disabled={isQuestionAddDisabled()}>\n          Add Question\n        </Button>\n        <Button\n          className=\"survey-main-btn\"\n          onClick={() => setShow(true)}\n          disabled={isQuestionAddDisabled()}\n        >\n          Publish\n        </Button>\n\n        {show ? (\n          <>\n            <p>{question}</p>\n            <ShowSingle ques={question} single={options} />\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SingleSelect;\n","import MultiSelect from \"./MultiSelect\";\nimport SingleSelect from \"./SingleSelect\";\nimport React, { useState } from \"react\";\n\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nfunction CreateSurvey() {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownText, setDropdownText] = useState(\"Select Question Type\");\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  return (\n    <>\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>{dropdownText}</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={() => setDropdownText(\"Multi-select\")}>\n            Multi-select\n          </DropdownItem>\n          <DropdownItem onClick={() => setDropdownText(\"Single Select\")}>\n            Single Select\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      {dropdownText === \"Multi-select\" ? <MultiSelect /> : null}\n      {dropdownText === \"Single Select\" ? <SingleSelect /> : null}\n    </>\n  );\n}\n\nexport default CreateSurvey;\n","function TakeSurvey() {\n  return <div className=\"Take-Survey\">TakeSurvey</div>;\n}\n\nexport default TakeSurvey;\n","import \"./styles.css\";\nimport { Button } from \"reactstrap\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CreateSurvey from \"./components/CreateSurvey\";\nimport TakeSurvey from \"./components/TakeSurvey\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Survey Tiger</h1>\n        <Switch>\n          <Route path=\"/create/:surveyId\">\n            <CreateSurvey />\n          </Route>\n          <Route path=\"/take\">\n            <TakeSurvey />\n          </Route>\n          <Route path=\"/\">\n            <Link to=\"/create/123\">\n              <Button className=\"survey-main-btn\">Create Survey</Button>\n            </Link>\n            <Link to=\"/take\">\n              <Button className=\"survey-main-btn\">Take Survey</Button>\n            </Link>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}